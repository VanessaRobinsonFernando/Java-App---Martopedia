/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package martopediareal;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static martopediareal.UserInterface.RandomNoLabel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author zobia
 */
public class UserCart extends javax.swing.JFrame {

    /**
     * Creates new form UserCart
     */
    public UserCart() {
        initComponents();
        fetch();
        sum();
        totalPanel.setBackground(new Color(255,255,255,240));
        
        RandomNoLabel.setText(UserInterface.RandomNoLabel.getText());
       
        CartTable.getTableHeader().setFont(new Font("Segoe UI Semibold", Font.ITALIC, 15));  //Sets the header font type - font design and font size
        CartTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);  //Auto resize is turned off 
        CartTable.getColumnModel().getColumn(0).setPreferredWidth(120);  //this sets the width of first column of the table 
        CartTable.getColumnModel().getColumn(1).setPreferredWidth(269);  
        CartTable.getColumnModel().getColumn(2).setPreferredWidth(150);
        CartTable.getColumnModel().getColumn(3).setPreferredWidth(90);
 
    }

     
    //Following method is created to get the sum of the total amount that the user has to pay
     public void sum()
      {
         double sum = 0;
                
             for(int i = 0; i < CartTable.getRowCount(); i++)
              {
                  sum = (double) (sum + Double.parseDouble(CartTable.getValueAt(i, 4).toString())); 
               }
             
             subTotal.setText(Double.toString(sum));
             Total.setText(Double.toString(sum));
             delivery.setText("Free");  //Delivery is free always
      }
    
        public void fetch()
        {
            RandomNoLabel.setText(UserInterface.RandomNoLabel.getText());
        try
        {
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/Martopedia","root","abc.123$");  //Forms connection with MySQL Database
            String query =  "SELECT ItemCode, ItemName, Price, Quantity, Total FROM Orders WHERE OrderCode = '"+RandomNoLabel.getText()+" ' ;";  //It's a COMMAND/QUERY given to MySQL database to get the data                              
            PreparedStatement pst=con.prepareStatement(query);  //Prepares the command/query to run
            ResultSet rs = pst.executeQuery();  //Runs the command/query and the result from MySQL database is stored in variable rs
           
            CartTable.setModel(DbUtils.resultSetToTableModel(rs));  //Sets the result from the variable rs to the Booking table              
            
        CartTable.getTableHeader().setFont(new Font("Segoe UI Semibold", Font.ITALIC, 15));  //Sets the header font type - font design and font size
        CartTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);  //Auto resize is turned off 
        CartTable.getColumnModel().getColumn(0).setPreferredWidth(120);  //this sets the width of first column of the table 
        CartTable.getColumnModel().getColumn(1).setPreferredWidth(269);  
        CartTable.getColumnModel().getColumn(2).setPreferredWidth(150);
        CartTable.getColumnModel().getColumn(3).setPreferredWidth(90);
        
        }      
        catch(Exception e)  //catches error in application, if any.
        {
           JOptionPane.showMessageDialog(this,e.getMessage());  //displays error message to the user 
        }      
    }
     
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RandomNoLabel = new javax.swing.JLabel();
        headerPanel = new javax.swing.JPanel();
        emailLabel = new javax.swing.JLabel();
        totalPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        subTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        delivery = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CartTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        checkOutButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        BackgroundLabel = new javax.swing.JLabel();
        iCode = new javax.swing.JLabel();
        iBrand = new javax.swing.JLabel();
        iPrice = new javax.swing.JLabel();
        iQuantity = new javax.swing.JLabel();
        iTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        RandomNoLabel.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        getContentPane().add(RandomNoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 730, 180, 23));

        headerPanel.setBackground(new java.awt.Color(77, 81, 152));
        headerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emailLabel.setBackground(new java.awt.Color(255, 255, 255));
        emailLabel.setFont(new java.awt.Font("Segoe UI Emoji", 1, 48)); // NOI18N
        emailLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailLabel.setText("MY CART");
        emailLabel.setToolTipText("");
        headerPanel.add(emailLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 360, 60));

        getContentPane().add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1220, 140));

        totalPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Subtotal");

        subTotal.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Delivery");

        delivery.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N
        delivery.setForeground(new java.awt.Color(255, 0, 0));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("TOTAL");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("(Inclusive of VAT)");

        Total.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Total.setToolTipText("");

        javax.swing.GroupLayout totalPanelLayout = new javax.swing.GroupLayout(totalPanel);
        totalPanel.setLayout(totalPanelLayout);
        totalPanelLayout.setHorizontalGroup(
            totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, totalPanelLayout.createSequentialGroup()
                .addGroup(totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(totalPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(totalPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(totalPanelLayout.createSequentialGroup()
                                .addGroup(totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(110, 110, 110)
                                .addGroup(totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(subTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .addComponent(delivery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(totalPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );
        totalPanelLayout.setVerticalGroup(
            totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delivery, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(totalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        getContentPane().add(totalPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(766, 199, -1, -1));

        CartTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        CartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Brand/tem", "Price", "Quantity", "Item Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CartTable.setSelectionBackground(new java.awt.Color(255, 140, 86));
        jScrollPane1.setViewportView(CartTable);
        if (CartTable.getColumnModel().getColumnCount() > 0) {
            CartTable.getColumnModel().getColumn(0).setResizable(false);
            CartTable.getColumnModel().getColumn(1).setResizable(false);
            CartTable.getColumnModel().getColumn(2).setResizable(false);
            CartTable.getColumnModel().getColumn(3).setResizable(false);
            CartTable.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 710, 450));

        backButton.setBackground(new java.awt.Color(77, 81, 152));
        backButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back ");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 640, 106, 50));

        checkOutButton.setBackground(new java.awt.Color(77, 81, 152));
        checkOutButton.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        checkOutButton.setForeground(new java.awt.Color(255, 255, 255));
        checkOutButton.setText("CHECKOUT NOW");
        checkOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(checkOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(766, 430, 413, 59));

        deleteButton.setBackground(new java.awt.Color(77, 81, 152));
        deleteButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 640, 106, 50));

        BackgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Cart.jpg"))); // NOI18N
        getContentPane().add(BackgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 1220, 620));
        getContentPane().add(iCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 650, 80, -1));
        getContentPane().add(iBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 690, 80, -1));
        getContentPane().add(iPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 710, 60, -1));

        iQuantity.setText("jLabel6");
        getContentPane().add(iQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 710, 80, -1));

        iTotal.setText("jLabel5");
        getContentPane().add(iTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 710, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
             Frame frame = null;
        // TODO add your handling code here:
           if  (JOptionPane.showConfirmDialog(frame, "Warning! \nGoing Back will remove all items from your Cart\nDo you want to continue?","BACK",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION)
                {
                       new UserInterface().setVisible(true); 
                       this.dispose();
                }
    }//GEN-LAST:event_backButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
           JFrame frame = new JFrame("Exit");
           String itemCode = iCode.getText();
           String itemBrand = iBrand.getText();
           String itemPrice = iPrice.getText();  
           String itemQuantity = iQuantity.getText();      
           String total = iTotal.getText();  
           
           if(itemCode.isEmpty() && itemBrand.isEmpty() && itemPrice.isEmpty() && itemQuantity.isEmpty() && total.isEmpty())
           {
               JOptionPane.showMessageDialog(null,"Please select an order to delete");
           }
           else
           {
               try
                 {
                   Class.forName("com.mysql.jdbc.Driver");
                   Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Martopedia","root", "abc.123$");
                   
                   int i = CartTable.getSelectedRow();
                   String code = (CartTable.getModel().getValueAt(i,0).toString());
                   
                   String query = "DELETE FROM Orders WHERE ItemCode = '"+code+"';";
                   PreparedStatement pst = con.prepareStatement(query);
                   pst.executeUpdate();
                   
                   DefaultTableModel model = (DefaultTableModel) CartTable.getModel();
                   model.setRowCount(0);
                   fetch();
                   sum();
                   
                   // The following code sets the labels to empty
                   iCode.setText("");
                   iBrand.setText("");
                   iPrice.setText("");
                   iQuantity.setText("");
                   iTotal.setText("");        
                  }
               catch(Exception e)
               {
                   JOptionPane.showMessageDialog(null,e.getMessage());
               }
           }
                 
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void checkOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutButtonActionPerformed
            new PaymentForm().setVisible(true);  //form called Payment open
            PaymentForm.billAmount.setText(Total.getText());
            this.dispose();  //current form is closed
    }//GEN-LAST:event_checkOutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserCart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundLabel;
    private javax.swing.JTable CartTable;
    public static javax.swing.JLabel RandomNoLabel;
    public static javax.swing.JLabel Total;
    private javax.swing.JButton backButton;
    private javax.swing.JButton checkOutButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel delivery;
    public static javax.swing.JLabel emailLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel iBrand;
    private javax.swing.JLabel iCode;
    private javax.swing.JLabel iPrice;
    private javax.swing.JLabel iQuantity;
    private javax.swing.JLabel iTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel subTotal;
    private javax.swing.JPanel totalPanel;
    // End of variables declaration//GEN-END:variables
}
